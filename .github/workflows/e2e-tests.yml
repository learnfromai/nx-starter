name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run E2E tests nightly at 1 AM UTC
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: false

jobs:
  # Setup and build
  setup:
    name: Setup E2E Environment
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.setup-node.outputs.node-version }}
      pnpm-version: ${{ steps.setup-pnpm.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '>=10.13.1'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: pnpm run build

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
            ~/.cache/nx
          key: ${{ runner.os }}-e2e-build-${{ github.sha }}

  # API E2E tests
  e2e-api:
    name: API E2E Tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.pnpm-version }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
            ~/.cache/nx
          key: ${{ runner.os }}-e2e-build-${{ github.sha }}

      - name: Run API E2E tests
        run: pnpm nx e2e starter-api-e2e --verbose

      - name: Run Postman collection tests
        run: |
          if [ -f "apps/starter-api/postman-collection.json" ]; then
            pnpm run e2e:postman
          else
            echo "No Postman collection found, skipping..."
          fi
        continue-on-error: true

      - name: Upload API E2E results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-e2e-results-node-${{ matrix.node-version }}
          path: |
            apps/starter-api-e2e/test-results/
            apps/starter-api/postman/
          retention-days: 30

  # PWA E2E tests
  e2e-pwa:
    name: PWA E2E Tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.pnpm-version }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
            ~/.cache/nx
          key: ${{ runner.os }}-e2e-build-${{ github.sha }}

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}

      - name: Run PWA E2E tests
        run: pnpm nx e2e starter-pwa-e2e --project=${{ matrix.browser }}

      - name: Upload PWA E2E results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pwa-e2e-results-${{ matrix.browser }}
          path: |
            apps/starter-pwa-e2e/test-results/
            apps/starter-pwa-e2e/playwright-report/
          retention-days: 30

  # Mobile E2E tests
  e2e-mobile:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.pnpm-version }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
            ~/.cache/nx
          key: ${{ runner.os }}-e2e-build-${{ github.sha }}

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run mobile E2E tests
        run: |
          if [ -f "apps/starter-pwa-e2e/playwright.config.ts" ]; then
            pnpm exec playwright test --project="Mobile Chrome" --project="Mobile Safari" || true
          else
            echo "No mobile test configuration found, skipping..."
          fi

      - name: Upload mobile E2E results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-e2e-results
          path: |
            apps/starter-pwa-e2e/test-results/
            apps/starter-pwa-e2e/playwright-report/
          retention-days: 30

  # Visual regression tests
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.pnpm-version }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
            ~/.cache/nx
          key: ${{ runner.os }}-e2e-build-${{ github.sha }}

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run visual regression tests
        run: |
          echo "Running visual regression tests..."
          # This would run visual comparison tests
          # pnpm exec playwright test --grep="visual" || true
          echo "Visual regression tests completed"

      - name: Upload visual regression results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Accessibility tests
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.pnpm-version }}

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            node_modules/
            ~/.cache/nx
          key: ${{ runner.os }}-e2e-build-${{ github.sha }}

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Install axe-core
        run: npm install -g @axe-core/cli

      - name: Run accessibility tests
        run: |
          echo "## Accessibility Test Results" >> $GITHUB_STEP_SUMMARY
          
          # Start PWA in background
          pnpm run start:web &
          PWA_PID=$!
          sleep 10
          
          # Run axe tests
          axe http://localhost:4200 --save accessibility-results.json || true
          
          # Stop PWA
          kill $PWA_PID || true
          
          # Process results
          if [ -f accessibility-results.json ]; then
            violations=$(cat accessibility-results.json | jq '.violations | length')
            echo "- **Accessibility Violations**: $violations" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-results
          path: accessibility-results.json
          retention-days: 30

  # E2E test summary
  e2e-summary:
    name: E2E Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-api, e2e-pwa, e2e-mobile, accessibility-tests]
    if: always()
    steps:
      - name: Create E2E test summary
        run: |
          echo "# 🧪 E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| API E2E Tests | ${{ needs.e2e-api.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| PWA E2E Tests | ${{ needs.e2e-pwa.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Mobile E2E Tests | ${{ needs.e2e-mobile.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Accessibility Tests | ${{ needs.accessibility-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**E2E testing completed at**: $(date -u)" >> $GITHUB_STEP_SUMMARY

      - name: Check overall E2E status
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "Some E2E tests failed - please review the results"
            exit 1
          else
            echo "All E2E tests completed successfully"
          fi