# Railway.com Deployment Configuration
# This file configures the deployment of both API and Web applications to Railway

[build]
# Build configuration for Railway
builder = "nixpacks"
buildCommand = "pnpm install && pnpm run build:prod"

# API Service Configuration
[environments.production.variables]
# Server Configuration
NODE_ENV = "production"
ENVIRONMENT = "production"
PORT = "${PORT}"
HOST = "0.0.0.0"

# CORS Configuration (will be updated with actual domains)
CORS_ORIGIN = "${RAILWAY_STATIC_URL}"
CORS_CREDENTIALS = "true"

# JWT Configuration (should be set in Railway dashboard as secrets)
# JWT_SECRET = "production-secret-from-railway-env"
JWT_EXPIRES_IN = "24h"
JWT_ISSUER = "nx-starter-api"
JWT_AUDIENCE = "nx-starter-web"

# Database Configuration (Railway PostgreSQL)
DB_TYPE = "postgresql"
DB_ORM = "typeorm"
DATABASE_URL = "${DATABASE_URL}"

# Application Configuration
APP_NAME = "Nx Starter API"
APP_VERSION = "1.0.0"
API_PREFIX = "/api"

# Logging
LOG_LEVEL = "info"
LOG_FORMAT = "json"

# Security
RATE_LIMIT_WINDOW_MS = "900000"
RATE_LIMIT_MAX_REQUESTS = "1000"

# Cache (can be upgraded to Redis later)
CACHE_ENABLED = "false"

[environments.staging.variables]
# Staging Environment Variables
NODE_ENV = "staging"
ENVIRONMENT = "staging"
PORT = "${PORT}"
HOST = "0.0.0.0"

# CORS for staging
CORS_ORIGIN = "${RAILWAY_STATIC_URL}"
CORS_CREDENTIALS = "true"

# Database Configuration (Railway PostgreSQL)
DB_TYPE = "postgresql"
DB_ORM = "typeorm"
DATABASE_URL = "${DATABASE_URL}"

# Application Configuration
APP_NAME = "Nx Starter API (Staging)"
APP_VERSION = "1.0.0-staging"
API_PREFIX = "/api"

# Logging
LOG_LEVEL = "debug"
LOG_FORMAT = "json"

# Deploy Configuration
[deploy]
startCommand = "cd dist/apps/api && node main.js"
healthcheckPath = "/api/health"
healthcheckTimeout = 30
restartPolicyType = "always"